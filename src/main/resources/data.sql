CREATE TABLE ALIAS(
    ID INTEGER NOT NULL,
    ALIAS_NAME VARCHAR2(100) NOT NULL,
    RESOURCE_URL VARCHAR2(100) NOT NULL,
    ARTIST_ID INTEGER,
    PRIMARY KEY(ID)
);

CREATE TABLE ARTIST(
    name varchar2(100) NOT NULL,
	ID NUMBER(10) NOT NULL,
    RESOURCE_URL VARCHAR2(100) NOT NULL,
    URI VARCHAR2(500) NOT NULL,
    RELEASES_URL VARCHAR2(100) NOT NULL,
    REAL_NAME VARCHAR2(100),
    ARTIST_PROFILE VARCHAR2(10000) NOT NULL,
    DATA_QUALITY VARCHAR2(100) NOT NULL,
    PRIMARY KEY(ID)
);

CREATE TABLE COMMUNITY(
    ID INTEGER NOT NULL,
    WANT INTEGER,
    HAVE INTEGER,
    PRIMARY KEY(ID)
);

CREATE TABLE RELEASE(
    ID INTEGER NOT NULL,
    COUNTRY VARCHAR2(50),
	RELEASE_YEAR INTEGER,
    RELEASE_TYPE VARCHAR2(50),
    MASTER_ID INTEGER,
    MASTER_URL VARCHAR2(100),
    URI VARCHAR2(500),
    CATNO VARCHAR2(50),
    TITLE VARCHAR2(500),
    THUMB VARCHAR2(500),
    COVER_IMAGE VARCHAR2(500),
    RESOURCE_URL VARCHAR2(100),
    COMMUNITY_ID INTEGER,
    MAIN_RELEASE VARCHAR2(100),
    RELEASE_ROLE VARCHAR2(100),
    PRIMARY KEY(ID),
    FOREIGN KEY (COMMUNITY_ID) REFERENCES COMMUNITY(ID)
);

CREATE TABLE IMAGE(
    ID INTEGER NOT NULL,
	IMAGE_TYPE VARCHAR2(10) NOT NULL,
	URI VARCHAR2(100) NOT NULL,
	RESOURCE_URL VARCHAR2(100) NOT NULL,
	URI_150 VARCHAR2(650) NOT NULL,
    WIDTH INTEGER NOT NULL,
	HEIGHT INTEGER NOT NULL,
    ARTIST_ID INTEGER,
    PRIMARY KEY(ID)
);

CREATE TABLE STYLE(
    ID INTEGER NOT NULL,
	STYLE_NAME VARCHAR2(100) NOT NULL,
    RELEASE_ID INTEGER,
    PRIMARY KEY(ID),
    FOREIGN KEY (RELEASE_ID) REFERENCES RELEASE(ID)
);

CREATE TABLE BARCODE(
    ID INTEGER NOT NULL,
    BARCODE_VALUE VARCHAR2(50) NOT NULL,
    RELEASE_ID INTEGER,
    PRIMARY KEY(ID),
    FOREIGN KEY (RELEASE_ID) REFERENCES RELEASE(ID)
);

CREATE TABLE GENRE(
    ID INTEGER NOT NULL,
	GENRE_NAME VARCHAR2(100) NOT NULL,
    RELEASE_ID INTEGER,
    PRIMARY KEY(ID),
    FOREIGN KEY (RELEASE_ID) REFERENCES RELEASE(ID)
);

CREATE TABLE FORMAT(
    ID INTEGER NOT NULL,
	FORMAT_NAME VARCHAR2(100) NOT NULL,
    RELEASE_ID INTEGER,
    PRIMARY KEY(ID),
    FOREIGN KEY (RELEASE_ID) REFERENCES RELEASE(ID)
);
CREATE TABLE LABEL(
    ID INTEGER NOT NULL,
	LABEL_NAME VARCHAR2(100) NOT NULL,
    RELEASE_ID INTEGER,
    PRIMARY KEY(ID),
    FOREIGN KEY (RELEASE_ID) REFERENCES RELEASE(ID)
);

CREATE TABLE EXTRA_ARTIST(
    ID INTEGER NOT NULL,
    EA_NAME VARCHAR2(500),
	ANV VARCHAR2(100),
	EA_JOIN VARCHAR2(100),
	EA_ROLE VARCHAR2(100),
	RESOURCE_URL VARCHAR2(500),
    PRIMARY KEY(ID)
);

CREATE TABLE TRACK(
    ID INTEGER NOT NULL,
	TRACK_NAME VARCHAR2(100) NOT NULL, 
	POSITION VARCHAR2(3),
    TYPE_ VARCHAR2(100),
    TITLE VARCHAR2(500),
    DURATION VARCHAR2(10),
    EXTRA_ARTIST_ID INTEGER,
    RELEASE_ID INTEGER NOT NULL,
    PRIMARY KEY(ID),
    FOREIGN KEY (EXTRA_ARTIST_ID) REFERENCES EXTRA_ARTIST(ID),
    FOREIGN KEY (RELEASE_ID) REFERENCES RELEASE(ID)
);

CREATE TABLE ARTIST_RELEASE(
    ID INTEGER NOT NULL,
    ARTIST_ID INTEGER NOT NULL,
    RELEASE_ID INTEGER NOT NULL,
    PRIMARY KEY(ID),
    FOREIGN KEY (ARTIST_ID) REFERENCES ARTIST(ID),
    FOREIGN KEY (RELEASE_ID) REFERENCES RELEASE(ID)
);

CREATE TABLE MEMBER(
    ID INTEGER NOT NULL,
	MEMBER_NAME VARCHAR2(500) NOT NULL,
	RESOURCE_URL VARCHAR2(500),
	ACTIVE BOOLEAN NOT NULL DEFAULT TRUE,
    ARTIST_ID INTEGER NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (ARTIST_ID) REFERENCES ARTIST(ID)
);

CREATE TABLE STAT(
    ID INTEGER NOT NULL,
	COMMUNITY_ID INTEGER NOT NULL,
    PRIMARY KEY(ID),
    FOREIGN KEY (COMMUNITY_ID) REFERENCES COMMUNITY(ID)
);